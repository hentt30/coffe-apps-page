{"ast":null,"code":"var _jsxFileName = \"/home/henrique/Documents/coffe-apps-page/landing-page/src/LandingPage/Sobre/Sobre.js\";\nimport React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    minHeight: \"100vh\",\n    alignItems: \"center\",\n    width: \"100%\",\n    background: \"#3df0b1\"\n  },\n  title: {\n    fontSize: \"56px\",\n    fontFamily: \"lato\",\n    fontWeight: \"bold\",\n    color: \"#F5F5F5\"\n  },\n  text: {\n    fontSize: \"20px\",\n    fontFamily: \"lato\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    color: \"#1D2A30\"\n  },\n  img: {\n    height: \"180px\",\n    width: \"180px\",\n    borderRadius: \"50%\"\n  },\n  description: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    align: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nclass Sobre extends React.Component {\n  render() {\n    const {\n      classes\n    } = this.props;\n    const DataCard = [{\n      imgs: [{\n        label: \"Tela de Login\",\n        imgPath: \"/workplace.svg\"\n      }, {\n        label: \"Tela de Chat\",\n        imgPath: \"/workplace.svg\"\n      }],\n      title: \"Aplicativo\",\n      subtitle: \"Chatbot para Android, IPhone e Web.\",\n      description: \"Chatbot com sistema de login, cadastro e comunicação com uma API feita em Python que executava toda a lógica para gerar uma resposta ao usuário. Este aplicativo foi desenvolvido para Android, IPhone e Web.\"\n    }, {\n      imgs: [{\n        label: \"Tela de Login\",\n        imgPath: \"/workplace.svg\"\n      }, {\n        label: \"Tela de Chat\",\n        imgPath: \"/workplace.svg\"\n      }],\n      title: \"Aplicativo\",\n      subtitle: \"Aplicação Web de vídeos no modelo do Netflix.\",\n      description: \"Aplicação Web com sistema de login, cadastro, exibição de vídeos e upload de vídeos. Nesta aplicação o dono da página realizava upload dos vídeos para os assinantes da plataforma.\"\n    }, {\n      imgs: [{\n        label: \"\",\n        imgPath: \"/computer.svg\"\n      }],\n      title: \"Ciência de Dados\",\n      subtitle: \"Machine learning para resolver desafios.\",\n      description: \"Criação de uma aplicação para retirar informações de CNH, construção de Knowledge graphs para \\\n        a automatização de insights e aplicação para correção de redações automaticamente.\"\n    }, {\n      imgs: [{\n        label: \"\",\n        imgPath: \"/robot.svg\"\n      }],\n      title: \"Robótica\",\n      subtitle: \"\",\n      description: \"Participação em um grupo de pesquisa em robótica relacionado com futebol \\\n         robótico simulado 2D. Nessa experiência desenvolveu-se uma forte intuição de conceitos  \\\n         relacionados a   inteligência artificial e otimizações. Além  disso, obteve-se experiência \\\n          com projetos grandes em C++ e com a criação de scripts para automatização de tarefas.\"\n    }, {\n      imgs: [{\n        label: \"\",\n        imgPath: \"/brain.svg\"\n      }],\n      title: \"Inteligência Artificial\",\n      subtitle: \"Série de projetos desenvolvidos \",\n      description: \"Projetos relacionados a otimizações, visão computational e aprendizado por\\\n        reforço.\"\n    }, {\n      imgs: [{\n        label: \"\",\n        imgPath: \"/tv.svg\"\n      }],\n      title: \"Automatização de Processos\",\n      subtitle: \"Web scrapping, sistemas operacionais e APIs\",\n      description: \"Criação de scripts para burlar captchas ,extrair informações de páginas web, \\\n          instalação de dependências de um projeto,testes de montecarlo utilizando APIS e  criação de planilhas. \"\n    }];\n    return React.createElement(\"div\", {\n      style: {\n        background: \"#3df0b1\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      id: \"projetos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Projetos\")), React.createElement(Grid, {\n      container: true,\n      display: \"flex\",\n      alignItems: \"center\",\n      justify: \"space-evenly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, DataCard.map(data => React.createElement(Grid, {\n      className: classes.card,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(MediaCard, Object.assign({}, data, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["/home/henrique/Documents/coffe-apps-page/landing-page/src/LandingPage/Sobre/Sobre.js"],"names":["React","CssBaseline","Grid","Paper","Typography","PropTypes","withStyles","styles","theme","root","display","height","minHeight","alignItems","width","background","title","fontSize","fontFamily","fontWeight","color","text","justifyContent","textAlign","img","borderRadius","description","flexDirection","paper","align","Sobre","Component","render","classes","props","DataCard","imgs","label","imgPath","subtitle","map","data","card","Home","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    minHeight: \"100vh\",\n    alignItems: \"center\",\n    width: \"100%\",\n    background: \"#3df0b1\"\n  },\n  title: {\n    fontSize: \"56px\",\n    fontFamily: \"lato\",\n    fontWeight: \"bold\",\n    color: \"#F5F5F5\"\n  },\n  text: {\n    fontSize: \"20px\",\n    fontFamily: \"lato\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    color: \"#1D2A30\"\n  },\n  img: {\n    height: \"180px\",\n    width: \"180px\",\n    borderRadius: \"50%\"\n  },\n  description: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    align: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nclass Sobre extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    const DataCard = [\n      {\n        imgs: [\n          {\n            label: \"Tela de Login\",\n            imgPath: \"/workplace.svg\"\n          },\n          {\n            label: \"Tela de Chat\",\n            imgPath: \"/workplace.svg\"\n          }\n        ],\n        title: \"Aplicativo\",\n        subtitle: \"Chatbot para Android, IPhone e Web.\",\n        description:\n          \"Chatbot com sistema de login, cadastro e comunicação com uma API feita em Python que executava toda a lógica para gerar uma resposta ao usuário. Este aplicativo foi desenvolvido para Android, IPhone e Web.\"\n      },\n      {\n        imgs: [\n          {\n            label: \"Tela de Login\",\n            imgPath: \"/workplace.svg\"\n          },\n          {\n            label: \"Tela de Chat\",\n            imgPath: \"/workplace.svg\"\n          }\n        ],\n        title: \"Aplicativo\",\n        subtitle: \"Aplicação Web de vídeos no modelo do Netflix.\",\n        description:\n          \"Aplicação Web com sistema de login, cadastro, exibição de vídeos e upload de vídeos. Nesta aplicação o dono da página realizava upload dos vídeos para os assinantes da plataforma.\"\n      },\n      {\n        imgs: [\n          {\n            label: \"\",\n            imgPath: \"/computer.svg\"\n          }\n        ],\n        title: \"Ciência de Dados\",\n        subtitle: \"Machine learning para resolver desafios.\",\n        description:\n          \"Criação de uma aplicação para retirar informações de CNH, construção de Knowledge graphs para \\\n        a automatização de insights e aplicação para correção de redações automaticamente.\"\n      },\n      {\n        imgs: [\n          {\n            label: \"\",\n            imgPath: \"/robot.svg\"\n          }\n        ],\n        title: \"Robótica\",\n        subtitle: \"\",\n        description:\n          \"Participação em um grupo de pesquisa em robótica relacionado com futebol \\\n         robótico simulado 2D. Nessa experiência desenvolveu-se uma forte intuição de conceitos  \\\n         relacionados a   inteligência artificial e otimizações. Além  disso, obteve-se experiência \\\n          com projetos grandes em C++ e com a criação de scripts para automatização de tarefas.\"\n      },\n      {\n        imgs: [\n          {\n            label: \"\",\n            imgPath: \"/brain.svg\"\n          }\n        ],\n        title: \"Inteligência Artificial\",\n        subtitle: \"Série de projetos desenvolvidos \",\n        description:\n          \"Projetos relacionados a otimizações, visão computational e aprendizado por\\\n        reforço.\"\n      },\n      {\n        imgs: [\n          {\n            label: \"\",\n            imgPath: \"/tv.svg\"\n          }\n        ],\n        title: \"Automatização de Processos\",\n        subtitle: \"Web scrapping, sistemas operacionais e APIs\",\n        description:\n          \"Criação de scripts para burlar captchas ,extrair informações de páginas web, \\\n          instalação de dependências de um projeto,testes de montecarlo utilizando APIS e  criação de planilhas. \"\n      }\n    ];\n\n    return (\n      <div\n        style={{\n          background: \"#3df0b1\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        }}\n      >\n        <div className={classes.root} id=\"projetos\">\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Typography className={classes.title}>Projetos</Typography>\n          </Grid>\n          <Grid\n            container\n            display=\"flex\"\n            alignItems=\"center\"\n            justify=\"space-evenly\"\n          >\n            {DataCard.map(data => (\n              <Grid className={classes.card} item>\n                <MediaCard {...data} />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Home);\n"]},"metadata":{},"sourceType":"module"}